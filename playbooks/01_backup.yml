- name: Backup /etc config using tar with timestamp
  hosts: backup
  become: yes
  vars:
    backup_time: "{{ ansible_date_time.iso8601_basic_short }}"  # contoh: 20250516T153021
  tasks:
    - name: Ensure backup directory exists
      file:
        path: /var/backups
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Archive /etc using tar with timestamp
      command: >
        tar czf /var/backups/etc-{{ inventory_hostname }}-{{ backup_time }}.tar.gz /etc

    - name: Dump root crontab
      command: crontab -l
      register: cronout
      ignore_errors: yes  # Kalau tidak ada crontab, tetap lanjut

    - name: Save crontab to file
      copy:
        content: "{{ cronout.stdout | default('') }}\n"
        dest: "/var/backups/crontab-{{ inventory_hostname }}-{{ backup_time }}.txt"
      when: cronout.stdout is defined

  

#    - name: Ensure backup directory exists
#      ansible.builtin.file:
#        path: /backups
#        state: directory
#        owner: root
#        group: root
#        mode: '0755'

#    - name: Archive /etc using tar command
#      ansible.builtin.command: >
#        tar czf /backups/etc-backup-{{ inventory_hostname }}.tar.gz /etc
#      #args:
#      #  warn: false

#    - name: Verify backup archive created
#      ansible.builtin.stat:
#        path: /backups/etc-backup-{{ inventory_hostname }}.tar.gz
#      register: backup_file

#    - name: Fail if backup archive was not created
#      ansible.builtin.fail:
#        msg: "Backup archive was not created!"
#      when: not backup_file.stat.exists
